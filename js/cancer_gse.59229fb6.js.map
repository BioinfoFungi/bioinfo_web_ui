{"version":3,"sources":["webpack:///./src/views/cancer/GSE.vue?10b0","webpack:///src/views/cancer/GSE.vue","webpack:///./src/views/cancer/GSE.vue?2668","webpack:///./src/views/cancer/GSE.vue?5e5d","webpack:///./src/api/code.js","webpack:///./src/views/cancer/GSE.vue?884e","webpack:///./src/api/CancerStudy.js","webpack:///./src/api/task.js"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","visible","on","onClose","_l","item","index","key","_v","_s","obj","id","$event","addTask","name","task_columns","taskList","record","scopedSlots","_u","fn","text","runTask","showLog","currentLogName","_e","minRows","maxRows","model","value","callback","$$v","Log","expression","staticClass","domProps","moreInfo","createTSVFile","initTSV","staticStyle","onSearch","columns","data","loading","x","handleTableChange","checkFileExist","downlaod","relativePath","showDrawer","updateCancerStudy","delCancerStudy","slot","style","textAlign","pagination","page","total","size","staticRenderFns","sort","keyword","queryParam","categoryId","status","tasks","fields","cancerId","undefined","codeList","setIntervaStatus","svgJson","mounted","loadData","loadFields","$websock","onmessage","msgType","methods","pageSize","studyId","dataOriginId","dataCategoryId","analysisSoftwareId","CancerStudy","console","log","resp","findbyId","updateProject","$router","push","query","delProject","message","$confirm","title","content","onOk","notification","onCancel","loadTask","loadCode","clearInterval","absolutePath","notification_error","loadLog","loadLogFun","setInterval","window","location","href","download_url","path","blob","res","reader","FileReader","readAsDataURL","onload","e","a","document","createElement","download","target","result","body","appendChild","click","removeChild","rowChannge","expand","innerData","isEmpty","component","baseUrl","CodeApi","params","more","service","url","method","CRUD","param","responseType","CancerStudyApi","codeId","findById","getFields","TaskApi"],"mappings":"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","file":"js/cancer_gse.59229fb6.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('a-drawer',{attrs:{\"title\":\"癌症研究\",\"placement\":\"right\",\"closable\":false,\"visible\":_vm.visible,\"width\":\"80%\"},on:{\"close\":_vm.onClose}},[(_vm.obj)?_c('div',[_c('a-descriptions',{attrs:{\"title\":\"Data\",\"bordered\":\"\",\"size\":\"small\",\"column\":2}},_vm._l((_vm.fields),function(item,index){return _c('a-descriptions-item',{key:index,attrs:{\"label\":item}},[_vm._v(\" \"+_vm._s(_vm.obj[item])+\" \")])}),1),_c('div',_vm._l((_vm.codeList),function(item){return _c('a-button',{key:item.id,attrs:{\"type\":\"link\"},on:{\"click\":function($event){return _vm.addTask(_vm.obj.id, item.id)}}},[_vm._v(\" \"+_vm._s(item.name)+\" \")])}),1),_c('div',[_c('a-table',{attrs:{\"columns\":_vm.task_columns,\"data-source\":_vm.taskList,\"bordered\":\"\",\"pagination\":false,\"row-key\":function (record) { return record.id; }},scopedSlots:_vm._u([{key:\"action\",fn:function(text, record){return _c('span',{},[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.runTask(record.id)}}},[_vm._v(\"运行任务\")]),_c('a-divider',{attrs:{\"type\":\"vertical\"}}),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.showLog(record)}}},[_vm._v(\"LOG\")])],1)}}],null,false,2072407525)})],1),(_vm.currentLogName)?_c('span',[_vm._v(\"current Log:\"+_vm._s(_vm.currentLogName))]):_vm._e(),_c('a-textarea',{attrs:{\"placeholder\":\"run log\",\"auto-size\":{ minRows: 3, maxRows: 20 }},model:{value:(_vm.Log),callback:function ($$v) {_vm.Log=$$v},expression:\"Log\"}}),_vm._l((_vm.svgJson),function(item,index){return _c('div',{key:index,staticClass:\"svgJson\",domProps:{\"innerHTML\":_vm._s(item)}})}),_c('a-button',{on:{\"click\":function($event){return _vm.moreInfo(_vm.obj.id)}}},[_vm._v(\"查看更多\")])],2):_vm._e()]),_c('a-button',{on:{\"click\":_vm.createTSVFile}},[_vm._v(\"导出CSV\")]),_c('a-button',{on:{\"click\":function($event){return _vm.initTSV(false)}}},[_vm._v(\"导入CSV\")]),_c('a-button',{on:{\"click\":function($event){return _vm.initTSV(true)}}},[_vm._v(\"清空导入CSV\")]),_c('a-input-search',{staticStyle:{\"width\":\"200px\"},attrs:{\"placeholder\":\"input search text\"},on:{\"search\":_vm.onSearch}}),_c('a-table',{attrs:{\"columns\":_vm.columns,\"row-key\":function (record) { return record.id; },\"data-source\":_vm.data,\"pagination\":false,\"loading\":_vm.loading,\"scroll\":{ x: 'calc(1500px + 100%)' }},on:{\"change\":_vm.handleTableChange},scopedSlots:_vm._u([{key:\"id_link\",fn:function(id){return _c('div',{},[_c('a',{attrs:{\"href\":\"javascript:;\"}},[_vm._v(_vm._s(id))])])}},{key:\"action\",fn:function(text, record){return _c('span',{},[_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.checkFileExist(record.id)}}},[_vm._v(\" 检测 \")]),(record.status)?_c('a-divider',{attrs:{\"type\":\"vertical\"}}):_vm._e(),(record.status)?_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.downlaod(record.relativePath)}}},[_vm._v(\"原始数据\")]):_vm._e(),_c('a-divider',{attrs:{\"type\":\"vertical\"}}),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.showDrawer(record.id)}}},[_vm._v(\"更多\")]),_c('a-divider',{attrs:{\"type\":\"vertical\"}}),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.updateCancerStudy(record.id)}}},[_vm._v(\"编辑\")]),_c('a-divider',{attrs:{\"type\":\"vertical\"}}),_c('a',{attrs:{\"href\":\"javascript:;\"},on:{\"click\":function($event){return _vm.delCancerStudy(record.id)}}},[_vm._v(\"删除\")])],1)}}])},[_c('template',{slot:\"footer\"},[_c('div',{staticClass:\"page-wrapper\",style:({ textAlign: 'right' })},[_c('a-pagination',{staticClass:\"pagination\",attrs:{\"current\":_vm.pagination.page,\"total\":_vm.pagination.total,\"defaultPageSize\":_vm.pagination.size,\"pageSizeOptions\":['5', '10', '20', '50', '100'],\"showSizeChanger\":\"\"},on:{\"showSizeChange\":_vm.handleTableChange,\"change\":_vm.handleTableChange}})],1)])],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    <a-drawer\n      title=\"癌症研究\"\n      placement=\"right\"\n      :closable=\"false\"\n      :visible=\"visible\"\n      width=\"80%\"\n      @close=\"onClose\"\n    >\n      <div v-if=\"obj\">\n        <a-descriptions\n          title=\"Data\"\n          bordered\n          size=\"small\"\n          :column=\"2\"\n        >\n          <a-descriptions-item\n            v-for=\"(item, index) in fields\"\n            :key=\"index\"\n            :label=\"item\"\n          >\n            {{ obj[item] }}\n          </a-descriptions-item>\n        </a-descriptions>\n        <div>\n          <a-button\n            type=\"link\"\n            v-for=\"item in codeList\"\n            :key=\"item.id\"\n            @click=\"addTask(obj.id, item.id)\"\n          >\n            {{ item.name }}\n          </a-button>\n        </div>\n\n        <div>\n          <a-table\n            :columns=\"task_columns\"\n            :data-source=\"taskList\"\n            bordered\n            :pagination=\"false\"\n            :row-key=\"(record) => record.id\"\n          >\n            <span slot=\"action\" slot-scope=\"text, record\">\n              <a href=\"javascript:;\" @click=\"runTask(record.id)\">运行任务</a>\n              <a-divider type=\"vertical\" />\n              <a href=\"javascript:;\" @click=\"showLog(record)\">LOG</a>\n            </span>\n          </a-table>\n        </div>\n        <span v-if=\"currentLogName\">current Log:{{ currentLogName }}</span>\n        <a-textarea\n          v-model=\"Log\"\n          placeholder=\"run log\"\n          :auto-size=\"{ minRows: 3, maxRows: 20 }\"\n        />\n        <div\n          class=\"svgJson\"\n          v-for=\"(item, index) in svgJson\"\n          :key=\"index\"\n          v-html=\"item\"\n        ></div>\n        <a-button @click=\"moreInfo(obj.id)\">查看更多</a-button>\n      </div>\n    </a-drawer>\n    <a-button @click=\"createTSVFile\">导出CSV</a-button>\n    <a-button @click=\"initTSV(false)\">导入CSV</a-button>\n    <a-button @click=\"initTSV(true)\">清空导入CSV</a-button>\n    <a-input-search\n      placeholder=\"input search text\"\n      style=\"width: 200px\"\n      @search=\"onSearch\"\n    />\n\n    <a-table\n      :columns=\"columns\"\n      :row-key=\"(record) => record.id\"\n      :data-source=\"data\"\n      :pagination=\"false\"\n      :loading=\"loading\"\n      @change=\"handleTableChange\"\n      :scroll=\"{ x: 'calc(1500px + 100%)' }\"\n    >\n      <!-- @expand=\"rowChannge\" -->\n      <div slot=\"id_link\" slot-scope=\"id\">\n        <a href=\"javascript:;\">{{ id }}</a>\n      </div>\n\n      <span slot=\"action\" slot-scope=\"text, record\">\n        <!-- <a href=\"javascript:;\">Invite 一 {{record.name}}</a>\n        <a-divider type=\"vertical\" />-->\n        <!-- <a href=\"javascript:;\" @click=\"generateHtml(record.id)\">生成HTML</a> -->\n        <!-- <a-divider type=\"vertical\" /> -->\n        <!-- <a href=\"javascript:;\" @click=\"updateProject(record.id)\">编辑</a> -->\n        <a href=\"javascript:;\" @click=\"checkFileExist(record.id)\"> 检测 </a>\n        <a-divider type=\"vertical\" v-if=\"record.status\" />\n\n        <a\n          href=\"javascript:;\"\n          @click=\"downlaod(record.relativePath)\"\n          v-if=\"record.status\"\n          >原始数据</a\n        >\n        <a-divider type=\"vertical\" />\n        <a href=\"javascript:;\" @click=\"showDrawer(record.id)\">更多</a>\n        <a-divider type=\"vertical\" />\n        <a href=\"javascript:;\" @click=\"updateCancerStudy(record.id)\">编辑</a>\n        <a-divider type=\"vertical\" />\n        <a href=\"javascript:;\" @click=\"delCancerStudy(record.id)\">删除</a>\n        <!-- <a href=\"javascript:;\" @click=\"articleSettings(record.id)\">设置</a>\n        <a-divider type=\"vertical\" />\n        <a href=\"javascript:;\" @click=\"deleteArticleById(record.id)\">删除文章</a>-->\n        <!-- <a href=\"javascript:;\" class=\"ant-dropdown-link\">\n        More actions\n        <a-icon type=\"down\" />\n        </a>-->\n      </span>\n\n      <!-- :scroll=\"{ x: 1500, }\" -->\n      <!-- <template slot=\"name\" slot-scope=\"name\">{{ name.first }} {{ name.last }}</template> -->\n      <template slot=\"footer\">\n        <div class=\"page-wrapper\" :style=\"{ textAlign: 'right' }\">\n          <a-pagination\n            class=\"pagination\"\n            :current=\"pagination.page\"\n            :total=\"pagination.total\"\n            :defaultPageSize=\"pagination.size\"\n            :pageSizeOptions=\"['5', '10', '20', '50', '100']\"\n            showSizeChanger\n            @showSizeChange=\"handleTableChange\"\n            @change=\"handleTableChange\"\n          />\n        </div>\n      </template>\n    </a-table>\n  </div>\n</template>\n<script>\nimport CancerStudyAPi from \"@/api/CancerStudy.js\";\nimport CodeApi from \"@/api/code.js\";\nimport TaskApi from \"@/api/task.js\";\nconst task_columns = [\n  {\n    title: \"id\",\n    dataIndex: \"id\",\n  },\n  {\n    title: \"taskStatus\",\n    dataIndex: \"taskStatus\",\n  },\n  {\n    title: \"codeId\",\n    dataIndex: \"codeId\",\n  },\n  {\n    title: \"objId\",\n    dataIndex: \"objId\",\n  },\n  {\n    title: \"name\",\n    dataIndex: \"name\",\n  },\n  {\n    title: \"Action\",\n    key: \"action\",\n    // fixed: \"right\",\n    //   width: 200,\n    fixed: \"right\",\n    scopedSlots: { customRender: \"action\" },\n  },\n];\nconst columns = [\n  {\n    title: \"ID\",\n    dataIndex: \"id\",\n    scopedSlots: { customRender: \"id_link\" },\n    fixed: \"left\",\n  },\n  {\n    title: \"GSE\",\n    dataIndex: \"gse\",\n  },\n  {\n    title: \"癌症名称\",\n    dataIndex: \"cancer.name\",\n    // scopedSlots: { customRender: \"cancer\" }\n  },\n\n  {\n    title: \"研究名称\",\n    dataIndex: \"study.name\",\n  },\n  {\n    title: \"数据来源\",\n    dataIndex: \"dataOrigin.name\",\n  },\n  {\n    title: \"数据分类\",\n    dataIndex: \"dataCategory.name\",\n  },\n  {\n    title: \"处理流程\",\n    dataIndex: \"analysisSoftware.name\",\n  },\n  {\n    title: \"基因注释\",\n    dataIndex: \"annotation\",\n  },\n\n  {\n    title: \"parentId\",\n    dataIndex: \"parentId\",\n  },\n  {\n    title: \"codeId\",\n    dataIndex: \"codeId\",\n  },\n  {\n    title: \"大小\",\n    dataIndex: \"size\",\n  },\n  {\n    title: \"Action\",\n    key: \"action\",\n    // fixed: \"right\",\n    //   width: 200,\n    fixed: \"right\",\n    scopedSlots: { customRender: \"action\" },\n  },\n];\n\nexport default {\n  data() {\n    return {\n      pagination: {\n        page: 1,\n        size: 10,\n        sort: null,\n        keyword: null,\n      },\n      queryParam: {\n        page: 0,\n        size: 10,\n        sort: null,\n        keyword: null,\n        categoryId: null,\n        status: null,\n      },\n      data: [],\n      tasks: [],\n      fields: [],\n      loading: false,\n      columns,\n      task_columns,\n      cancerId: null,\n      visible: false,\n      obj: undefined,\n      codeList: [],\n      taskList: [],\n      Log: \"\",\n      setIntervaStatus: undefined,\n      currentLogName: undefined,\n      svgJson: [],\n    };\n  },\n  //   beforeRouteEnter(to, from, next) {\n  //     // Get post id from query\n  //     const cancerId = to.query.cancerId;\n\n  //     next(vm => {\n  //       if (cancerId) {\n  //         vm.cancerId = cancerId;\n  //         vm.loadData(cancerId);\n  //       }\n  //     });\n  //   },\n  mounted() {\n    this.loadData();\n    this.loadFields();\n    if (this.$websock) {\n      this.$websock.onmessage = (e) => {\n        let data = JSON.parse(e.data);\n        if (data.msgType == \"NOTIFY\") {\n          this.$message.success(data.message);\n        }\n        // this.loadData();\n        if (this.obj) {\n          this.loadTask(data.data.objId);\n        }\n        this.findbyId(data.data.objId);\n\n        // console.log(data)\n        let svgJson = JSON.parse(data.data.svgJson);\n        // console.log(svgJson)\n        this.svgJson = svgJson;\n      };\n    }\n  },\n  methods: {\n    handleTableChange(page, pageSize) {\n      this.pagination.page = page;\n      this.pagination.size = pageSize;\n      this.loadData();\n    },\n    loadData() {\n      this.queryParam.page = this.pagination.page - 1;\n      this.queryParam.size = this.pagination.size;\n      this.queryParam.sort = this.pagination.sort;\n      this.queryParam.keyword = this.pagination.keyword;\n\n      const cancerId = this.$route.query.cancerId;\n      const studyId = this.$route.query.studyId;\n      const dataOriginId = this.$route.query.dataOriginId;\n      const dataCategoryId = this.$route.query.dataCategoryId;\n      const analysisSoftwareId = this.$route.query.analysisSoftwareId;\n\n      this.queryParam.cancerId = cancerId;\n      this.queryParam.studyId = studyId;\n      this.queryParam.dataOriginId = dataOriginId;\n      this.queryParam.dataCategoryId = dataCategoryId;\n      this.queryParam.analysisSoftwareId = analysisSoftwareId;\n      // this.queryParam.parentId = -1;\n\n      this.loading = true;\n      CancerStudyAPi.page(\"GSE\", this.queryParam, true).then((resp) => {\n        // console.log(resp);\n\n        this.data = resp.data.data.content;\n        this.pagination.total = parseInt(resp.data.data.totalElements);\n        this.loading = false;\n      });\n    },\n    loadFields() {\n      CancerStudyAPi.getFields(\"GSE\").then((resp) => {\n        console.log(resp);\n        this.fields = resp.data.data;\n      });\n    },\n    findbyId(id) {\n      CancerStudyAPi.findById(\"GSE\", { id: id }).then((resp) => {\n        // console.log(resp);\n        this.obj = resp.data.data;\n      });\n    },\n    updateProject(id) {\n      this.$router.push({\n        name: \"cancer_cancer_study\",\n        query: { projectId: id },\n      });\n    },\n    delProject(id) {\n      CancerStudyAPi.del(id).then((resp) => {\n        this.$notification[\"success\"]({\n          message: resp.data.data.name + \":删除成功!\",\n        });\n        this.loadData();\n      });\n    },\n    updateCancerStudy(id) {\n      this.$router.push({\n        name: \"update_cancer_study\",\n        query: { cancerStudyId: id },\n      });\n    },\n    delCancerStudy(id) {\n      let loadData = this.loadData;\n      let notification = this.$notification[\"success\"];\n      this.$confirm({\n        title: \"删除癌症数据\",\n        content: \"您确定要删除该癌症数据吗?\",\n        onOk() {\n          CancerStudyAPi.del(id).then((resp) => {\n            loadData();\n            notification({\n              message: \"删除成功!\" + resp.data.message,\n            });\n          });\n        },\n        onCancel() {},\n      });\n    },\n    loadTask(id) {\n      TaskApi.listAll(\"GSE\", { id: id }).then((resp) => {\n        this.taskList = resp.data.data;\n        // console.log(resp)\n      });\n    },\n    loadCode() {\n      CodeApi.listByCrudType(\"GSE\").then((resp) => {\n        // console.log(resp);\n        this.codeList = resp.data.data;\n      });\n    },\n    showDrawer(id) {\n      this.visible = true;\n      this.findbyId(id);\n      this.loadCode();\n      this.loadTask(id);\n    },\n    onClose() {\n      this.visible = false;\n      this.obj = undefined;\n      this.Log = \"\";\n      if (this.setIntervaStatus) {\n        clearInterval(this.setIntervaStatus);\n      }\n      this.svgJson = [];\n      this.loadData();\n    },\n    checkFileExist(id) {\n      let loadData = this.loadData;\n      let notification = this.$notification[\"success\"];\n      let notification_error = this.$notification[\"error\"];\n      CancerStudyAPi.checkFileExist(id).then((resp) => {\n        loadData();\n        if (resp.data.data.status) {\n          notification({\n            message: \"文件存在：\" + resp.data.data.absolutePath,\n          });\n        } else {\n          notification_error({\n            message: \"文件不存在\" + resp.data.data.absolutePath,\n          });\n        }\n      });\n    },\n    moreInfo(id) {\n      this.$router.push({\n        name: \"cancer_study_task\",\n        query: { objId: id },\n      });\n    },\n    loadLog(id) {\n      TaskApi.log({ taskId: id }).then((resp) => {\n        // console.log(resp.data.data);\n        this.Log = resp.data.data;\n      });\n    },\n    showLog(data) {\n      this.visible = true;\n      let loadLogFun = this.loadLog;\n      loadLogFun(data.id);\n      this.currentLogName = data.name;\n      if (this.setIntervaStatus) {\n        clearInterval(this.setIntervaStatus);\n      }\n      this.setIntervaStatus = setInterval(function () {\n        loadLogFun(data.id);\n      }, 1000);\n    },\n    runTask(id) {\n      CancerStudyAPi.runTask(\"GSE\", { id: id }).then((resp) => {\n        // console.log(resp)/\n\n        this.showLog(resp.data.data);\n        this.loadTask(resp.data.data.objId);\n        // let svgJson = JSON.parse(resp.data.data.svgJson);\n        // // console.log(svgJson)\n        // this.svgJson=svgJson;\n        this.$message.success(resp.data.data.name + \"运行！ \");\n      });\n      // TaskApi.runOne(id).then((resp) => {\n      //   this.loadData();\n      //   this.$message.success(resp.data.data.name + \"运行成功\");\n      //   this.loadTask(this.obj.id);\n      //   this.showLog(resp.data.data);\n      // });\n    },\n    addTask(cancerStudyId, codeId) {\n      // console.log(cancerStudyId, codeId);\n      CancerStudyAPi.addTask(\"GSE\", { id: cancerStudyId, codeId: codeId }).then(\n        (resp) => {\n          // console.log(resp)\n          // this.loadData();\n          this.showLog(resp.data.data);\n          this.loadTask(cancerStudyId);\n          // let svgJson = JSON.parse(resp.data.data.svgJson);\n          // // console.log(svgJson)\n          // this.svgJson=svgJson;\n          this.$message.success(resp.data.data.name + \"创建成功\");\n        }\n      );\n      // TaskApi.run({\n      //   objId: cancerStudyId,\n      //   codeId: codeId,\n      //   taskType: \"CANCER_STUDY\",\n      // }).then((resp) => {\n      //   this.loadTask(cancerStudyId);\n      //   this.$message.success(resp.data.data.name + \"创建成功\");\n      //   this.showLog(resp.data.data);\n      //   this.loadCode(cancerStudyId);\n      //   //  this.$notification[\"success\"]({\n      //   //     message: \"运行成功!\" + resp.data.message,\n      //   //   });\n      // });\n    },\n    downlaod(path) {\n      let download_url = JSON.parse(localStorage.getItem(\"global_config\"));\n      window.location.href = download_url.download_url + \"/\" + path;\n    },\n    createTSVFile() {\n      CancerStudyAPi.createTSVFile().then((res) => {\n        var blob = res.data;\n        var reader = new FileReader();\n        reader.readAsDataURL(blob);\n        reader.onload = function (e) {\n          var a = document.createElement(\"a\");\n          // 获取文件名fileName\n          console.log(res);\n          // var fileName = res.headers[\"Content-Disposition\"]\n          // fileName = fileName[fileName.length - 1];\n          // fileName = fileName.replace(/\"/g, \"\");\n          a.download = \"export.tsv\";\n          a.href = e.target.result;\n          document.body.appendChild(a);\n          a.click();\n          document.body.removeChild(a);\n        };\n      });\n    },\n    onSearch(value) {\n      this.pagination.keyword = value;\n      this.loadData();\n    },\n    rowChannge(expand, record) {\n      // console.log(expand, record);\n      if (expand) {\n        CancerStudyAPi.list({ parentId: record.id }).then((resp) => {\n          // console.log(resp);\n          this.innerData = resp.data.data;\n        });\n      } else {\n        this.innerData = [];\n      }\n    },\n    initTSV(isEmpty) {\n      CancerStudyAPi.init(\"GSE\", {\n        isEmpty: isEmpty,\n        path: \"/home/wangyang/Downloads/series.tsv\",\n      }).then((resp) => {\n        // console.log(resp)\n        this.loadData();\n        this.$notification[\"success\"]({\n          message: resp.data.message,\n        });\n      });\n    },\n  },\n};\n</script>\n\n<style>\n.svgJson svg {\n  width: 100%;\n}\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GSE.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GSE.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GSE.vue?vue&type=template&id=3d3f6350&\"\nimport script from \"./GSE.vue?vue&type=script&lang=js&\"\nexport * from \"./GSE.vue?vue&type=script&lang=js&\"\nimport style0 from \"./GSE.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import service from '@/utils/service'\nconst baseUrl = '/api/code'\n\nconst CodeApi = {}\n\nCodeApi.page = (params,more=false) =>{\n    return service({\n        url: `${baseUrl}?more=${more}`,\n        params: params,\n        method: 'get'\n    })\n}\n\n\nCodeApi.findByCan = (id) => {\n    return service({\n        url: `${baseUrl}/findByCan/${id}`,\n        method: 'get'\n    })\n}\nCodeApi.checkFileExist = (id) => {\n    return service({\n        url: `${baseUrl}/checkFile/${id}`,\n        method: 'get'\n    })\n}\n\n\nCodeApi.del = (id) => {\n    return service({\n        url: `${baseUrl}/del/${id}`,\n        method: 'get'\n    })\n}\n\nCodeApi.add = (params) => {\n    return service({\n        url: baseUrl,\n        data: params,\n        method: 'post'\n    })\n}\n\nCodeApi.update = (id,params) => {\n    return service({\n        url: `${baseUrl}/update/${id}`,\n        data: params,\n        method: 'post'\n    })\n}\n\nCodeApi.findById = (id,params) => {\n    return service({\n        url: `${baseUrl}/findById/${id}`,\n        params:params,\n        method: 'get'\n    })\n}\nCodeApi.listByCrudType = (CRUD) => {\n    return service({\n        url: `${baseUrl}/${CRUD}/listAll`,\n        method: 'get'\n    })\n}\n\nCodeApi.init = (param) => {\n    return service({\n        url: `${baseUrl}/init`,\n        params:param,\n        method: 'get',\n    })\n}\nCodeApi.createTSVFile = () => {\n    return service({\n        url: `${baseUrl}/createTSVFile`,\n        method: 'post',\n        responseType: 'blob'\n    })\n}\n\nCodeApi.files = (path) => {\n    return service({\n        url: `${baseUrl}/file`,\n        params:{path:path},\n        method: 'get',\n    })\n}\nCodeApi.getContent = (path) => {\n    return service({\n        url: `${baseUrl}/file/content`,\n        params:{path:path},\n        method: 'get',\n    })\n}\n\nCodeApi.saveContent = (params) => {\n    return service({\n        url: `${baseUrl}/file/save`,\n        data: params,\n        method: 'post',\n    })\n}\nexport default CodeApi","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./GSE.vue?vue&type=style&index=0&lang=css&\"","import service from '@/utils/service'\nconst baseUrl = '/api/cancer_study'\n\nconst CancerStudyApi = {}\n\nCancerStudyApi.page = (CRUD,params,more=false) =>{\n    return service({\n        url: `${baseUrl}/${CRUD}?more=${more}`,\n        params: params,\n        method: 'get'\n    })\n}\n\nCancerStudyApi.pageByCodeId = (codeId,params,more=false) =>{\n    return service({\n        url: `${baseUrl}/pageByCodeId/${codeId}?more=${more}`,\n        params: params,\n        method: 'get'\n    })\n}\nCancerStudyApi.list = (params,more=false) =>{\n    return service({\n        url: `${baseUrl}/list?more=${more}`,\n        params: params,\n        method: 'get'\n    })\n}\n\n\nCancerStudyApi.listByCancerId = (id) =>{\n    return service({\n        url: `${baseUrl}/listByCancerId/${id}`,\n        method: 'get'\n    })\n}\n\nCancerStudyApi.del = (id) => {\n    return service({\n        url: `${baseUrl}/del/${id}`,\n        method: 'get'\n    })\n}\n\nCancerStudyApi.checkFileExist = (id) => {\n    return service({\n        url: `${baseUrl}/checkFile/${id}`,\n        method: 'get'\n    })\n}\n\n\nCancerStudyApi.add = (params) => {\n    return service({\n        url: baseUrl,\n        data: params,\n        method: 'post'\n    })\n}\nCancerStudyApi.update = (id,params) => {\n    return service({\n        url: `${baseUrl}/update/${id}`,\n        data: params,\n        method: 'post'\n    })\n}\n\n\nCancerStudyApi.init = (CRUD,param) => {\n    return service({\n        url: `${baseUrl}/init/${CRUD}`,\n        params:param,\n        method: 'get',\n    })\n}\n\nCancerStudyApi.findById = (id,params) => {\n    return service({\n        url: `${baseUrl}/findById/${id}`,\n        params:params,\n        method: 'get'\n    })\n}\n\nCancerStudyApi.addTask = (CRUD,params) => {\n    return service({\n        url: `${baseUrl}/addTask/${CRUD}`,\n        params:params,\n        method: 'get'\n    })\n}\n\nCancerStudyApi.runTask = (CRUD,params) => {\n    return service({\n        url: `${baseUrl}/runTask/${CRUD}`,\n        params:params,\n        method: 'get'\n    })\n}\nCancerStudyApi.findById = (CRUD,params) => {\n    return service({\n        url: `${baseUrl}/${CRUD}/findById`,\n        params:params,\n        method: 'get'\n    })\n}\nCancerStudyApi.getFields = (CRUD) => {\n    return service({\n        url: `${baseUrl}/${CRUD}/getFields`,\n        method: 'get'\n    })\n}\nCancerStudyApi.createTSVFile = () => {\n    return service({\n        url: `${baseUrl}/createTSVFile`,\n        method: 'post',\n        responseType: 'blob'\n    })\n}\n\nexport default CancerStudyApi","import service from '@/utils/service'\nconst baseUrl = '/api/task'\n\nconst TaskApi = {}\n\nTaskApi.page = (params) =>{\n    return service({\n        url: `${baseUrl}`,\n        params: params,\n        method: 'get'\n    })\n}\nTaskApi.listAll = (CRUD,params) =>{\n    return service({\n        url: `${baseUrl}/listAll/${CRUD}`,\n        params: params,\n        method: 'get'\n    })\n}\n\nTaskApi.run = (params) =>{\n    return service({\n        url: `${baseUrl}/run`,\n        params: params,\n        method: 'get'\n    })\n}\n\nTaskApi.log = (params) =>{\n    return service({\n        url: `${baseUrl}/log`,\n        params: params,\n        method: 'get'\n    })\n}\n\nTaskApi.runOne = (id) =>{\n    return service({\n        url: `${baseUrl}/run/${id}`,\n        method: 'get'\n    })\n}\n\nTaskApi.shutdown = (id) =>{\n    return service({\n        url: `${baseUrl}/shutdown/${id}`,\n        method: 'get'\n    })\n}\n\nTaskApi.del = (id) => {\n    return service({\n        url: `${baseUrl}/del/${id}`,\n        method: 'get'\n    })\n}\n\n\nTaskApi.findById = (id) => {\n    return service({\n        url: `${baseUrl}/findById/${id}`,\n        method: 'get'\n    })\n}\nTaskApi.runCodes = (params) => {\n    return service({\n        url: `${baseUrl}/runCodes`,\n        data: params,\n        method: 'post'\n    })\n}\nTaskApi.runByCodeId = (id) => {\n    return service({\n        url: `${baseUrl}/runByCodeId/${id}`,\n        method: 'get',\n    })\n}\nTaskApi.removeALlTask = () => {\n    return service({\n        url: `${baseUrl}/removeALlTask`,\n        method: 'get',\n    })\n}\n\nTaskApi.getObjMap = (id) => {\n    return service({\n        url: `${baseUrl}/getObjMap/${id}`,\n        method: 'get'\n    })\n}\nexport default TaskApi"],"sourceRoot":""}